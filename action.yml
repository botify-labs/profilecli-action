name: profilecli
description: Download PGO profile

inputs:
  endpoint:
    description: Pyroscope API endpoint to fetch profiling data.
    required: true
  query:
    description: Pyroscope query used to filter profiling data.
    required: true
  username:
    description: Username for authentication with the profile endpoint.
    required: true
  password:
    description: Password for authentication with the profile endpoint.
    required: true
  output_path:
    description: Path to the output file where the profile will be saved
    required: false
    default: default.pgo
  range_from:
    description: Start time for the profiling range (e.g., 'now-24h').
    required: false
    default: now-24h
  range_to:
    description: End time for the profiling range (e.g., 'now').
    required: false
    default: now
  profile_type:
    description: Type of profile to fetch.
    required: false
    default: process_cpu:samples:count:cpu:nanoseconds
  profilecli_version:
    description: "Version of profilecli to use."
    required: false
    default: "1.1.5"

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3

    - name: Generate and share timestamp
      shell: sh
      run: echo PROFILECLI_ACTION_TMP_FILE=/tmp/profilecli-action-$(date +%s%3N).pgo >> $GITHUB_ENV

    - name: Download profilecli executable
      shell: sh
      run: |
        curl -fL https://github.com/grafana/pyroscope/releases/download/v${{ inputs.profilecli_version }}/profilecli_${{ inputs.profilecli_version }}_linux_amd64.tar.gz | tar xvz
        chmod +x profilecli

    - name: Download profiling
      shell: sh
      run: |
        ./profilecli query merge \
          --from="${{ inputs.range_from }}" \
          --to="${{ inputs.range_to }}" \
          --profile-type="${{ inputs.profile_type }}" \
          --query='${{ inputs.query }}' \
          --output="pprof=$PROFILECLI_ACTION_TMP_FILE" \
          --url="${{ inputs.endpoint }}" \
          --username="${{ inputs.username }}" \
          --password="${{ inputs.password }}"

    - name: Replace previous profile with the new one
      shell: sh
      run: mv -f $PROFILECLI_ACTION_TMP_FILE ${{ inputs.output_path }}

    - name: Commit, push, and create pull request
      shell: sh
      run: |
        if git status -s "${{ inputs.output_path }}" | grep -qE '(M|\?\?)'; then
          git config --global user.email "profilecli-action@do-not-reply.com"
          git config --global user.name "profilecli-action"
          PROFILECLI_ACTION_BRANCH=profilecli-action/generate-profile-$(date +%s%3N)
          git switch -c "$PROFILECLI_ACTION_BRANCH"
          git add ${{ inputs.output_path }}
          git commit -m "Generate profile"
          git push -u origin "$PROFILECLI_ACTION_BRANCH"
          gh pr create \
            --title "Generate Go profile" \
            --body "Autogenerated." \
            --repo "${{ github.repository }}" \
            --head "$PROFILECLI_ACTION_BRANCH"
        else
          echo "No changes detected."
        fi
